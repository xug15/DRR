
Selected Options:
	Input file = -p
	Promoter Set = 28
	Output Directory = /public/home/2022122/xugang/project/antidrug/output/a5-fasta/EC10_2.plasmid.1.100.fa
!! fasta is not recognized option!

	Program will find de novo and known motifs in a gene list

		Usage:  findMotifs.pl <input list> <promoter set> <output directory> [additoinal options]

		example: findMotifs.pl genelist.txt mouse motifResults/ -len 10

		FASTA example: findMotifs.pl targets.fa fasta motifResults/ -fasta background.fa

	Available Promoter Sets: Add custom promoters sets with loadPromoters.pl

		Try typing "perl /public/home/2022122/xugang/app/miniconda3/share/homer/.//configureHomer.pl -list" to see available promoter sets
		Typing "perl /public/home/2022122/xugang/app/miniconda3/share/homer/.//configureHomer.pl -install NNN" to install promoter set NNN

	Basic options:
		-len <#>[,<#>,<#>...] (motif length, default=8,10,12) [NOTE: values greater 12 may cause the program
			to run out of memmory - in these cases decrease the number of sequences analyzed]
		-bg <background file> (ids to use as background, default: all genes)
		-start <#> (offset from TSS, default=-300) [max=based on Promoter Set]
		-end <#> (offset from TSS, default=50) [max=based on Promoter Set]
		-rna (output RNA motif logos and compare to RNA motif database, automatically sets -norevopp)
		-mask/-nomask (use/don't use repeatmasked files, default: -mask)
		-S <#> (Number of motifs to optimize, default: 25)
		-mis <#> (global optimization: searches for strings with # mismatches, default: 1)
		-noconvert (will not worry about converting input files into unigene ids)
		-norevopp (do not search the reverse strand for motifs)
		-nomotif (don't search for de novo motif enrichment)

	Scanning sequence for motifs
		-find <motif file> (This will cause the program to only scan for motifs)

	Including Enhancers - peak files of enhancer location, peak ID should be gene ID
		-enhancers <peak file> <genome verion>
			(enhancers to include in search space, peaks/sequences should be named with a gene ID
			If multiple enhancers per gene, use the same gene ID, and all will be included)
		-enhancersOnly (do not include promoter sequence in motif search)

	FASTA files: If you prefer to use your own fasta files, place target sequences and 
		background sequences in two separate FASTA formated files (must have unique identifiers)
		Target File - use in place of <input list> (i.e. the first argument)
		Background File - after output directory (with additional options) use the argument:
			-fastaBg <background fasta file> (This is recommended for fasta based analysis)
		In place of the promoter set use "fasta", or any valid set (this parameter is ignored)
		When finding motifs [-find], only the target file with be searched)
			-chopify (chops up background regions to match size of target regions)
				i.e. if background is a full genome or all mRNAs

	Known Motif Options/Visualization:
		-mset <vertebrates|insects|worms|plants|yeast|all> (check against motif collects, default: auto)
		-basic (don't check de novo motifs for similarity to known motifs)
		-bits (scale sequence logos by information content, default: doesn't scale)
		-nocheck (don't check for similarity between novo motif motifs and known motifs)
		-mcheck <motif file> (known motifs to check against de novo motifs,
		-noknown (don't search for known motif enrichment, default: -known)
		-mknown <motif file> (known motifs to check for enrichment,
		-nofacts (omit humor)
		-seqlogo (uses weblogo/seqlogo/ghostscript to visualize motifs, default uses SVG)

	Advanced options:
		-b (use binomial distribution to calculate p-values, hypergeometric is default)
		-nogo (don't search for gene ontology enrichment)
		-humanGO (Convert IDs to human for GO analysis)
		-ontology <ont.genes> [ont.genes] ... (custom ontologies for GO analysis)
		-noweight (no CG correction)
		-noredun (Don't remove predetermined redundant promoters/sequences)
		-g (input file is a group file, i.e. 1st column = id, 2nd = 0 or 1 [1=target,0=back])
		-cpg (use CpG% instead of GC% for sequence normalization)
		-rand (randomize labels for target and backgound sequences)
		-maskMotif <motif file 1> [motif file 2] ... (motifs to mask before motif finding)
		-opt <motif file 1> [motif file 2] ... (motifs to optimize/change length)
		-peaks (will produce peak file of promoters to use with findMotifsGenome.pl)
		-nowarn (no warnings)
		-keepFiles (don't delete temporary files)
		-dumpFasta (create target.fa and background.fa files)
		-min <#> (remove sequences shorter than #, default: 0)
		-max <#> (remove sequences longer than #, default: 1e10)
		-reuse (rerun homer using old seq files etc. with new options
			  and ignores input list, organism)
		-fdr <#> (Calculate empirical FDR for de novo discovery #=number of randomizations)

	homer2 specific options:
		-homer2 (use homer2 instead of original homer, default)
		-nlen <#> (length of lower-order oligos to normalize - general sequences, default: 3)
			-nmax <#> (Max normalization iterations, default: 160)
			-neutral (weight sequences to neutral frequencies, i.e. 25%, 6.25%, etc.)
		-olen <#> (lower-order oligo normalization for oligo table, use if -nlen isn't working well)
		-p <#> (Number of processors to use, default: 1)
		-e <#> (Maximum expected motif instance per bp in random sequence, default: 0.01)
		-cache <#> (size in MB for statistics cache, default: 500)
		-quickMask (skip full masking after finding motifs, similar to original homer)
		-homer1 (to force the use of the original homer)
		-minlp <#> (stop looking for motifs when seed logp score gets above #, default: -10)

	Original homer specific options:
		-float (allow adjustment of the degeneracy threshold for known motifs to improve p-value[dangerous])
		-homer1 (to force the use of the original homer)
		-depth [low|med|high|allnight] (time spent on local optimization default: med)


Selected Options:
	Input file = -p
	Promoter Set = 28
	Output Directory = /public/home/2022122/xugang/project/antidrug/output/a5-fasta/EC10_2.plasmid.2.100.fa
!! fasta is not recognized option!

	Program will find de novo and known motifs in a gene list

		Usage:  findMotifs.pl <input list> <promoter set> <output directory> [additoinal options]

		example: findMotifs.pl genelist.txt mouse motifResults/ -len 10

		FASTA example: findMotifs.pl targets.fa fasta motifResults/ -fasta background.fa

	Available Promoter Sets: Add custom promoters sets with loadPromoters.pl

		Try typing "perl /public/home/2022122/xugang/app/miniconda3/share/homer/.//configureHomer.pl -list" to see available promoter sets
		Typing "perl /public/home/2022122/xugang/app/miniconda3/share/homer/.//configureHomer.pl -install NNN" to install promoter set NNN

	Basic options:
		-len <#>[,<#>,<#>...] (motif length, default=8,10,12) [NOTE: values greater 12 may cause the program
			to run out of memmory - in these cases decrease the number of sequences analyzed]
		-bg <background file> (ids to use as background, default: all genes)
		-start <#> (offset from TSS, default=-300) [max=based on Promoter Set]
		-end <#> (offset from TSS, default=50) [max=based on Promoter Set]
		-rna (output RNA motif logos and compare to RNA motif database, automatically sets -norevopp)
		-mask/-nomask (use/don't use repeatmasked files, default: -mask)
		-S <#> (Number of motifs to optimize, default: 25)
		-mis <#> (global optimization: searches for strings with # mismatches, default: 1)
		-noconvert (will not worry about converting input files into unigene ids)
		-norevopp (do not search the reverse strand for motifs)
		-nomotif (don't search for de novo motif enrichment)

	Scanning sequence for motifs
		-find <motif file> (This will cause the program to only scan for motifs)

	Including Enhancers - peak files of enhancer location, peak ID should be gene ID
		-enhancers <peak file> <genome verion>
			(enhancers to include in search space, peaks/sequences should be named with a gene ID
			If multiple enhancers per gene, use the same gene ID, and all will be included)
		-enhancersOnly (do not include promoter sequence in motif search)

	FASTA files: If you prefer to use your own fasta files, place target sequences and 
		background sequences in two separate FASTA formated files (must have unique identifiers)
		Target File - use in place of <input list> (i.e. the first argument)
		Background File - after output directory (with additional options) use the argument:
			-fastaBg <background fasta file> (This is recommended for fasta based analysis)
		In place of the promoter set use "fasta", or any valid set (this parameter is ignored)
		When finding motifs [-find], only the target file with be searched)
			-chopify (chops up background regions to match size of target regions)
				i.e. if background is a full genome or all mRNAs

	Known Motif Options/Visualization:
		-mset <vertebrates|insects|worms|plants|yeast|all> (check against motif collects, default: auto)
		-basic (don't check de novo motifs for similarity to known motifs)
		-bits (scale sequence logos by information content, default: doesn't scale)
		-nocheck (don't check for similarity between novo motif motifs and known motifs)
		-mcheck <motif file> (known motifs to check against de novo motifs,
		-noknown (don't search for known motif enrichment, default: -known)
		-mknown <motif file> (known motifs to check for enrichment,
		-nofacts (omit humor)
		-seqlogo (uses weblogo/seqlogo/ghostscript to visualize motifs, default uses SVG)

	Advanced options:
		-b (use binomial distribution to calculate p-values, hypergeometric is default)
		-nogo (don't search for gene ontology enrichment)
		-humanGO (Convert IDs to human for GO analysis)
		-ontology <ont.genes> [ont.genes] ... (custom ontologies for GO analysis)
		-noweight (no CG correction)
		-noredun (Don't remove predetermined redundant promoters/sequences)
		-g (input file is a group file, i.e. 1st column = id, 2nd = 0 or 1 [1=target,0=back])
		-cpg (use CpG% instead of GC% for sequence normalization)
		-rand (randomize labels for target and backgound sequences)
		-maskMotif <motif file 1> [motif file 2] ... (motifs to mask before motif finding)
		-opt <motif file 1> [motif file 2] ... (motifs to optimize/change length)
		-peaks (will produce peak file of promoters to use with findMotifsGenome.pl)
		-nowarn (no warnings)
		-keepFiles (don't delete temporary files)
		-dumpFasta (create target.fa and background.fa files)
		-min <#> (remove sequences shorter than #, default: 0)
		-max <#> (remove sequences longer than #, default: 1e10)
		-reuse (rerun homer using old seq files etc. with new options
			  and ignores input list, organism)
		-fdr <#> (Calculate empirical FDR for de novo discovery #=number of randomizations)

	homer2 specific options:
		-homer2 (use homer2 instead of original homer, default)
		-nlen <#> (length of lower-order oligos to normalize - general sequences, default: 3)
			-nmax <#> (Max normalization iterations, default: 160)
			-neutral (weight sequences to neutral frequencies, i.e. 25%, 6.25%, etc.)
		-olen <#> (lower-order oligo normalization for oligo table, use if -nlen isn't working well)
		-p <#> (Number of processors to use, default: 1)
		-e <#> (Maximum expected motif instance per bp in random sequence, default: 0.01)
		-cache <#> (size in MB for statistics cache, default: 500)
		-quickMask (skip full masking after finding motifs, similar to original homer)
		-homer1 (to force the use of the original homer)
		-minlp <#> (stop looking for motifs when seed logp score gets above #, default: -10)

	Original homer specific options:
		-float (allow adjustment of the degeneracy threshold for known motifs to improve p-value[dangerous])
		-homer1 (to force the use of the original homer)
		-depth [low|med|high|allnight] (time spent on local optimization default: med)

